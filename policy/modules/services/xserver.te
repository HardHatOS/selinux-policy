policy_module(xserver, 3.9.4)

gen_require(`
	class process { noatsecure rlimitinh siginh };
    type iceauth_t;
    type user_t;
    type xauth_t;
')

########################################
#
# Declarations
#

## <desc>
##	<p>
##	Allows clients to write to the X server shared
##	memory segments.
##	</p>
## </desc>
gen_tunable(xserver_clients_write_xshm, false)

## <desc>
##	<p>
##	Allows XServer to execute writable memory
##	</p>
## </desc>
gen_tunable(xserver_execmem, false)

## <desc>
## 	<p>
## 	Allow the graphical login program to execute bootloader
##	</p>
## </desc>
gen_tunable(xdm_exec_bootloader, false)

## <desc>
##	<p>
##	Allow the graphical login program to create, read, write, and delete files in the /boot director and DOS filesystem.
## 	</p>
## </desc>
gen_tunable(xdm_manage_bootloader,true)

## <desc>
##	<p>
##	Allow the graphical login program to login directly as sysadm_r:sysadm_t
##	</p>
## </desc>
gen_tunable(xdm_sysadm_login, false)

## <desc>
##  <p>
##  Allow the graphical login program to create files in HOME dirs as xdm_home_t.
##  </p>
## </desc>
gen_tunable(xdm_write_home, false)

## <desc>
##	<p>
##	Allows xdm_t to bind on vnc_port_t(5910)
##	</p>
## </desc>
gen_tunable(xdm_bind_vnc_tcp_port, false)

## <desc>
##	<p>
##	Support X userspace object manager
##	</p>
## </desc>
gen_tunable(xserver_object_manager, false)

## <desc>
##	<p>
##	Allow regular users direct dri device access
##	</p>
## </desc>
gen_tunable(selinuxuser_direct_dri_enabled, false)

attribute xdmhomewriter;
attribute x_userdomain;
attribute x_domain;
attribute dridomain;

# X Events
attribute xevent_type;
attribute input_xevent_type;
type xevent_t, xevent_type;
typealias xevent_t alias { user_property_xevent_t staff_property_xevent_t sysadm_property_xevent_t };
typealias xevent_t alias { auditadm_property_xevent_t secadm_property_xevent_t };
typealias xevent_t alias { user_focus_xevent_t staff_focus_xevent_t sysadm_focus_xevent_t };
typealias xevent_t alias { auditadm_focus_xevent_t secadm_focus_xevent_t };
typealias xevent_t alias { user_manage_xevent_t staff_manage_xevent_t sysadm_manage_xevent_t };
typealias xevent_t alias { auditadm_manage_xevent_t secadm_manage_xevent_t };
typealias xevent_t alias { user_default_xevent_t staff_default_xevent_t sysadm_default_xevent_t };
typealias xevent_t alias { auditadm_default_xevent_t secadm_default_xevent_t };

type client_xevent_t, xevent_type;
typealias client_xevent_t alias { user_client_xevent_t staff_client_xevent_t sysadm_client_xevent_t };
typealias client_xevent_t alias { auditadm_client_xevent_t secadm_client_xevent_t };

type input_xevent_t, xevent_type, input_xevent_type;

# X Extensions
attribute xextension_type;
type xextension_t, xextension_type;
type security_xextension_t, xextension_type;

# X Properties
attribute xproperty_type;
type xproperty_t, xproperty_type;
type seclabel_xproperty_t, xproperty_type;
type clipboard_xproperty_t, xproperty_type;

# X Selections
attribute xselection_type;
type xselection_t, xselection_type;
type clipboard_xselection_t, xselection_type;
#type settings_xselection_t, xselection_type;
#type dbus_xselection_t, xselection_type;

# X Drawables
attribute xdrawable_type;
attribute xcolormap_type;
type root_xdrawable_t, xdrawable_type;
type root_xcolormap_t, xcolormap_type;

attribute xserver_unconfined_type;

xserver_object_types_template(root)
xserver_object_types_template(user)

typealias user_xproperty_t alias { staff_xproperty_t sysadm_xproperty_t };
typealias user_xproperty_t alias { auditadm_xproperty_t secadm_xproperty_t };
typealias user_input_xevent_t alias { staff_input_xevent_t sysadm_input_xevent_t };
typealias user_input_xevent_t alias { auditadm_input_xevent_t secadm_input_xevent_t };

type remote_t;
xserver_object_types_template(remote)
xserver_common_x_domain_template(remote, remote_t)

type user_fonts_t;
typealias user_fonts_t alias { staff_fonts_t sysadm_fonts_t xfs_fonts_t };
typealias user_fonts_t alias { auditadm_fonts_t secadm_fonts_t };
typealias user_fonts_t alias { xguest_fonts_t unconfined_fonts_t user_fonts_home_t };
typealias user_fonts_t alias xfs_tmp_t;
userdom_user_home_content(user_fonts_t)
files_tmp_file(user_fonts_t)

type user_fonts_cache_t;
typealias user_fonts_cache_t alias { staff_fonts_cache_t sysadm_fonts_cache_t };
typealias user_fonts_cache_t alias { auditadm_fonts_cache_t secadm_fonts_cache_t };
typealias user_fonts_cache_t alias { xguest_fonts_cache_t unconfined_fonts_cache_t };
userdom_user_home_content(user_fonts_cache_t)

type user_fonts_config_t;
typealias user_fonts_config_t alias { staff_fonts_config_t sysadm_fonts_config_t };
typealias user_fonts_config_t alias { auditadm_fonts_config_t secadm_fonts_config_t };
typealias user_fonts_config_t alias { fonts_config_home_t xguest_fonts_config_t unconfined_fonts_config_t };
userdom_user_home_content(user_fonts_config_t)

type iceauth_t;
type iceauth_exec_t;
typealias iceauth_t alias { user_iceauth_t staff_iceauth_t sysadm_iceauth_t };
typealias iceauth_t alias { xguest_iceauth_t };
typealias iceauth_t alias { auditadm_iceauth_t secadm_iceauth_t };
userdom_user_application_domain(iceauth_t, iceauth_exec_t)

type iceauth_home_t;
typealias iceauth_home_t alias { user_iceauth_home_t staff_iceauth_home_t sysadm_iceauth_home_t };
typealias iceauth_home_t alias { auditadm_iceauth_home_t secadm_iceauth_home_t };
typealias iceauth_home_t alias { xguest_iceauth_home_t };
userdom_user_home_content(iceauth_home_t)

type xauth_t;
type xauth_exec_t;
typealias xauth_t alias { user_xauth_t staff_xauth_t sysadm_xauth_t };
typealias xauth_t alias { auditadm_xauth_t secadm_xauth_t };
typealias xauth_t alias { xguest_xauth_t unconfined_xauth_t };
userdom_user_application_domain(xauth_t, xauth_exec_t)

type xauth_home_t;
typealias xauth_home_t alias { user_xauth_home_t staff_xauth_home_t sysadm_xauth_home_t };
typealias xauth_home_t alias { auditadm_xauth_home_t secadm_xauth_home_t };
typealias xauth_home_t alias { xguest_xauth_home_t unconfined_xauth_home_t };
userdom_user_home_content(xauth_home_t)

type xauth_tmp_t;
typealias xauth_tmp_t alias { user_xauth_tmp_t staff_xauth_tmp_t sysadm_xauth_tmp_t };
typealias xauth_tmp_t alias { xguest_xauth_tmp_t unconfined_xauth_tmp_t };
typealias xauth_tmp_t alias { auditadm_xauth_tmp_t secadm_xauth_tmp_t };
userdom_user_tmp_file(xauth_tmp_t)

# this is not actually a device, its a pipe
type xconsole_device_t;
files_type(xconsole_device_t)
dev_associate(xconsole_device_t)
fs_associate_tmpfs(xconsole_device_t)
files_associate_tmp(xconsole_device_t)

type xdm_unconfined_exec_t;
application_executable_file(xdm_unconfined_exec_t)

type xdm_t alias xdm_dbusd_t;
type xdm_exec_t;
auth_login_pgm_domain(xdm_t)
init_domain(xdm_t, xdm_exec_t)
init_system_domain(xdm_t, xdm_exec_t)
xserver_object_types_template(xdm)
xserver_common_x_domain_template(xdm, xdm_t)

type xdm_lock_t;
files_lock_file(xdm_lock_t)

type xdm_etc_t;
files_config_file(xdm_etc_t)

type xdm_rw_etc_t;
files_config_file(xdm_rw_etc_t)

type xdm_spool_t;
files_spool_file(xdm_spool_t)

type xdm_var_lib_t;
files_type(xdm_var_lib_t)

type xdm_var_run_t;
files_pid_file(xdm_var_run_t)

type xdm_unit_file_t;
systemd_unit_file(xdm_unit_file_t)

type xserver_var_lib_t;
files_type(xserver_var_lib_t)

type xserver_var_run_t;
files_pid_file(xserver_var_run_t)

type xdm_tmpfs_t;
files_tmpfs_file(xdm_tmpfs_t)

type xdm_home_t;
userdom_user_home_content(xdm_home_t)

type xdm_log_t;
logging_log_file(xdm_log_t)

# type for /var/lib/xkb
type xkb_var_lib_t;
files_type(xkb_var_lib_t)

# Type for the executable used to start the X server, e.g. Xwrapper.
type xserver_t;
type xserver_exec_t;
typealias xserver_t alias { user_xserver_t staff_xserver_t sysadm_xserver_t };
typealias xserver_t alias { auditadm_xserver_t secadm_xserver_t xdm_xserver_t };
init_system_domain(xserver_t, xserver_exec_t)
ubac_constrained(xserver_t)

type xserver_etc_t;
files_config_file(xserver_etc_t)

type xserver_tmpfs_t;
typealias xserver_tmpfs_t alias { user_xserver_tmpfs_t staff_xserver_tmpfs_t sysadm_xserver_tmpfs_t xguest_xserver_tmpfs_t unconfined_xserver_tmpfs_t xdm_xserver_tmpfs_t };
typealias xserver_tmpfs_t alias { auditadm_xserver_tmpfs_t secadm_xserver_tmpfs_t };
userdom_user_tmp_file(xserver_tmpfs_t)

type xsession_exec_t;
corecmd_executable_file(xsession_exec_t)

# Type for the X server log file.
type xserver_log_t;
logging_log_file(xserver_log_t)

ifdef(`enable_mcs',`
	init_ranged_domain(xdm_t, xdm_exec_t, s0 - mcs_systemhigh)
	init_ranged_daemon_domain(xdm_t, xdm_exec_t, s0 - mcs_systemhigh)
')

optional_policy(`
	prelink_object_file(xkb_var_lib_t)
')

########################################
#
# Iceauth local policy
#

#============= iceauth_t ==============
allow user_t iceauth_t:process { noatsecure rlimitinh siginh };

files_map_read_etc_files(iceauth_t)
userdom_manage_tmp_dirs(iceauth_t)
userdom_manage_tmp_files(iceauth_t)

########################################
#
# Xauth local policy
#

#============= xauth_t ==============
allow user_t xauth_t:process { noatsecure rlimitinh siginh };

files_map_read_etc_files(xauth_t)
